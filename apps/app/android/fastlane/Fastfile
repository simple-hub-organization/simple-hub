private_lane :get_last_version_code do
  if ENV["GITHUB_ACTIONS"] == "true"
    UI.message("Running in GitHub Actions")
    json_key_path = "/tmp/google_play_key.json"
  else
    UI.message("Running locally")
    json_key_path = "../../../../Smart-home-passwords/simple_hub/googlePlayStore/google_play_key.json"
  end

  track = "production"

  version_codes = google_play_track_version_codes(
    json_key: json_key_path,
    package_name: Actions.lane_context[:PACKAGE_NAME],
    track: track
  )

  last_version_code = version_codes.max
  UI.message("Last version code: #{last_version_code}")

  Actions.lane_context[:LAST_VERSION_CODE] = last_version_code
end

private_lane :clean_folder do
  folders = ["./metadata/en-US/images/phoneScreenshots", "./metadata/en-US/images/sevenInchScreenshots", "./metadata/en-US/images/tenInchScreenshots"]

  folders.each do |folder_path|
    if Dir.exist?(folder_path)
      Dir.foreach(folder_path) do |file|
        file_path = File.join(folder_path, file)
        File.delete(file_path) if File.file?(file_path)
      end
      UI.message("✅ All files in '#{folder_path}' have been removed.")
    else
      UI.message("❌ Folder '#{folder_path}' does not exist.")
    end
  end
end

private_lane :populate_metadata do
  metadata_path = "./metadata"

  unless File.exist?(metadata_path)
    UI.message("Running 'fastlane supply init' to initialize supply metadata...")
    sh("fastlane supply init --metadata_path #{metadata_path}")
  else
    UI.message("✅ Supply metadata already initialized.")
  end

  screenshots_src = '/tmp/flutter_app_screenshots'
  # Define all screenshot destination folders
  screenshot_folders = [ 'phoneScreenshots', 'sevenInchScreenshots', 'tenInchScreenshots']

  clean_folder

  require 'fileutils'
  
  # Copy screenshots to each destination folder
  screenshot_folders.each do |folder|
    screenshots_dest = File.join(metadata_path, 'en-US/images', folder)
    FileUtils.mkdir_p(screenshots_dest)
    
    Dir.foreach(screenshots_src) do |filename|
      next if filename == '.' || filename == '..'
      src_file = File.join(screenshots_src, filename)
      dest_file = File.join(screenshots_dest, filename)
      UI.message("Copying #{filename} to #{folder}")
      FileUtils.cp(src_file, dest_file)
    end
  end
end


lane :deploy do
  Actions.lane_context[:PACKAGE_NAME] = "com.mysimplehub"

  get_last_version_code

  new_version_code = Actions.lane_context[:LAST_VERSION_CODE] + 1

  populate_metadata

  # Build the Flutter app
  sh("flutter clean")
  sh("flutter build appbundle --release --build-number=#{new_version_code}")

  aab_path = "../build/app/outputs/bundle/release/app-release.aab"

  # Debug information to show current path and files
  current_dir = Dir.pwd
  UI.message("Current directory: #{current_dir}")
  UI.message("Files in current directory:")
  sh("ls -la")
  UI.message("Files in metadata directory:")
  sh("ls -la metadata") rescue UI.message("metadata directory not found")

  # Upload to Play Store new version and screenshots
  supply(
    track: 'production',
    package_name: Actions.lane_context[:PACKAGE_NAME],
    skip_upload_changelogs: true,
    aab: aab_path,
    metadata_path: './fastlane/metadata',
  )
end
