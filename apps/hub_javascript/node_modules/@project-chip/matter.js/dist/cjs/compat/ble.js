"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ble_exports = {};
__export(ble_exports, {
  BLE_MATTER_C1_CHARACTERISTIC_UUID: () => import_protocol.BLE_MATTER_C1_CHARACTERISTIC_UUID,
  BLE_MATTER_C2_CHARACTERISTIC_UUID: () => import_protocol.BLE_MATTER_C2_CHARACTERISTIC_UUID,
  BLE_MATTER_C3_CHARACTERISTIC_UUID: () => import_protocol.BLE_MATTER_C3_CHARACTERISTIC_UUID,
  BLE_MATTER_SERVICE_UUID: () => import_protocol.BLE_MATTER_SERVICE_UUID,
  BLE_MAXIMUM_BTP_MTU: () => import_protocol.BLE_MAXIMUM_BTP_MTU,
  BLE_MAX_MATTER_PAYLOAD_SIZE: () => import_protocol.BLE_MAX_MATTER_PAYLOAD_SIZE,
  BLE_MINIMUM_ATT_MTU: () => import_protocol.BLE_MINIMUM_ATT_MTU,
  BTP_ACK_TIMEOUT_MS: () => import_protocol.BTP_ACK_TIMEOUT_MS,
  BTP_CONN_IDLE_TIMEOUT: () => import_protocol.BTP_CONN_IDLE_TIMEOUT,
  BTP_CONN_RSP_TIMEOUT_MS: () => import_protocol.BTP_CONN_RSP_TIMEOUT_MS,
  BTP_MAXIMUM_WINDOW_SIZE: () => import_protocol.BTP_MAXIMUM_WINDOW_SIZE,
  BTP_SEND_ACK_TIMEOUT_MS: () => import_protocol.BTP_SEND_ACK_TIMEOUT_MS,
  BTP_SUPPORTED_VERSIONS: () => import_protocol.BTP_SUPPORTED_VERSIONS,
  Ble: () => import_protocol.Ble,
  BleChannel: () => import_protocol.BleChannel,
  BleError: () => import_protocol.BleError,
  BtpFlowError: () => import_protocol.BtpFlowError,
  BtpMatterError: () => import_protocol.BtpMatterError,
  BtpProtocolError: () => import_protocol.BtpProtocolError,
  BtpSessionHandler: () => import_protocol.BtpSessionHandler
});
module.exports = __toCommonJS(ble_exports);
var import_protocol = require("#protocol");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
//# sourceMappingURL=ble.js.map
