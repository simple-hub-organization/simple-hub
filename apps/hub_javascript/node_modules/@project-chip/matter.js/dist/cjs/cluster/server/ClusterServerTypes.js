"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClusterServerTypes_exports = {};
__export(ClusterServerTypes_exports, {
  UseOptionalAttributes: () => UseOptionalAttributes,
  asClusterServerInternal: () => asClusterServerInternal,
  isClusterServer: () => isClusterServer,
  isClusterServerInternal: () => isClusterServerInternal
});
module.exports = __toCommonJS(ClusterServerTypes_exports);
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const MakeAttributesMandatory = (attributes, conf) => {
  const result = { ...attributes };
  for (const key in conf) {
    result[key] = { ...result[key], optional: false };
  }
  return result;
};
const UseOptionalAttributes = (cluster, conf) => ({ ...cluster, attributes: MakeAttributesMandatory(cluster.attributes, conf) });
function isClusterServer(obj) {
  return obj._type === "ClusterServer";
}
function isClusterServerInternal(obj) {
  return obj._type === "ClusterServer";
}
function asClusterServerInternal(obj) {
  if (!isClusterServerInternal(obj)) {
    throw new Error("Object is not a ClusterServerObj instance.");
  }
  return obj;
}
//# sourceMappingURL=ClusterServerTypes.js.map
