/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { BridgedDeviceBasicInformationCluster } from "#clusters";
import { AttributeInitialValues } from "../cluster/server/ClusterServerTypes.js";
import { ComposedDevice } from "./ComposedDevice.js";
import { Device } from "./Device.js";
import { Endpoint, EndpointOptions } from "./Endpoint.js";
/**
 * An Aggregator is a special endpoint that exposes multiple devices as a "bridge" into the matter ecosystem.
 * Use the `addBridgedDevice` or `addBridgedDeviceWithPowerSourceInfo` method to add the devices and provide the details
 * for the "Bridged Device Basic Information Cluster". The BridgedDeviceBasicInformationCluster is then added automatically.
 * If Power source information should be provided you need to also add the needed clusters (PowerSourceConfigurationCluster
 * and PowerSourceCluster) to the device!
 */
export declare class Aggregator extends Endpoint {
    /**
     * Create a new Aggregator instance and optionally directly add devices to it. If this is used the devices must
     * already have the BridgedDeviceBasicInformationCluster added!
     * @param devices Array of devices to add
     * @param options Optional Endpoint options
     */
    constructor(devices?: Device[], options?: EndpointOptions);
    /**
     * Add a bridged device to the Aggregator. If provided the bridgedBasicInformation is used to automatically add the
     * BridgedDeviceBasicInformationCluster to the device and also handles Reachability event triggering when
     * reachability event changes. If not provided the BridgedDeviceBasicInformationCluster must be already existing
     * on the device!
     *
     * @param device Device instance to add
     * @param bridgedBasicInformation Optional BridgedDeviceBasicInformationCluster attribute values to
     */
    addBridgedDevice(device: Device | ComposedDevice, bridgedBasicInformation?: AttributeInitialValues<typeof BridgedDeviceBasicInformationCluster.attributes>): void;
    /**
     * Add a bridged device with power source information to the Aggregator. If provided the bridgedBasicInformation is
     * used to automatically add the BridgedDeviceBasicInformationCluster to the device. If not provided the
     * BridgedDeviceBasicInformationCluster must be already existing on the device!
     * The required clusters PowerSourceConfigurationCluster and PowerSourceCluster needs to be added manually to the device!
     *
     * @param device Device instance to add
     * @param bridgedBasicInformation Optional BridgedDeviceBasicInformationCluster attribute values to
     */
    addBridgedDeviceWithPowerSourceInfo(device: Device | ComposedDevice, bridgedBasicInformation?: AttributeInitialValues<typeof BridgedDeviceBasicInformationCluster.attributes>): void;
    /**
     * Returns all bridged devices added to the Aggregator
     *
     * @returns Array of bridged devices
     */
    getBridgedDevices(): Endpoint[];
    removeBridgedDevice(device: Device | ComposedDevice): void;
}
//# sourceMappingURL=Aggregator.d.ts.map