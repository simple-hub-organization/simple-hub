/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import type { StorageContext } from "#general";
import { Construction } from "#general";
import { DecodedAttributeReportValue, PeerDataStore } from "#protocol";
import { AttributeId, ClusterId, EndpointNumber, EventNumber } from "#types";
export declare class CachedClientNodeStore extends PeerDataStore {
    #private;
    get construction(): Construction<CachedClientNodeStore>;
    constructor(storage: StorageContext, load?: boolean);
    get maxEventNumber(): EventNumber;
    updateLastEventNumber(eventNumber: EventNumber): void | Promise<void>;
    retrieveAttribute(endpointId: EndpointNumber, clusterId: ClusterId, attributeId: AttributeId): DecodedAttributeReportValue<any> | undefined;
    retrieveAttributes(endpointId: EndpointNumber, clusterId: ClusterId): DecodedAttributeReportValue<any>[];
    persistAttributes(attributes: DecodedAttributeReportValue<any>[]): Promise<void>;
    getClusterDataVersion(endpointId: EndpointNumber, clusterId: ClusterId): number | undefined;
    getClusterDataVersions(filterEndpointId?: EndpointNumber, filterClusterId?: ClusterId): {
        endpointId: EndpointNumber;
        clusterId: ClusterId;
        dataVersion: number;
    }[];
}
//# sourceMappingURL=CachedClientNodeStore.d.ts.map