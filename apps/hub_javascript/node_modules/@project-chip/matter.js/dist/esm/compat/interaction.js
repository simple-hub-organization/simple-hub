/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Specification } from "#model";
import {
  attributePathToId,
  canAttributePayloadBeChunked,
  chunkAttributePayload,
  clusterPathToId,
  commandPathToId,
  compressAttributeDataReportTags,
  decodeAttributeValueWithSchema,
  decodeListAttributeValueWithSchema,
  decodeUnknownAttributeValue,
  decodeUnknownEventValue,
  encodeAttributePayload,
  encodeEventPayload,
  EventHandler,
  eventPathToId,
  expandPathsInAttributeData,
  genericElementPathToId,
  IncomingInteractionClientMessenger,
  InteractionClient,
  InteractionClientMessenger,
  InteractionEndpointStructure,
  InteractionServer,
  MessageType,
  normalizeAndDecodeAttributeData,
  normalizeAndDecodeEventData,
  normalizeAndDecodeReadAttributeReport,
  normalizeAndDecodeReadEventReport,
  normalizeAttributeData,
  normalizeEventData,
  sortAttributeDataByPath,
  structureReadAttributeDataToClusterObject,
  ServerSubscription,
  ServerSubscriptionConfig,
  validateReadAttributesPath,
  validateReadEventPath
} from "#protocol";
import { DEFAULT_MAX_PATHS_PER_INVOKE, INTERACTION_PROTOCOL_ID, StatusResponseError } from "#types";
export * from "@matter/types/protocol";
const INTERACTION_MODEL_REVISION = Specification.INTERACTION_MODEL_REVISION;
export {
  DEFAULT_MAX_PATHS_PER_INVOKE,
  EventHandler,
  INTERACTION_MODEL_REVISION,
  INTERACTION_PROTOCOL_ID,
  IncomingInteractionClientMessenger,
  InteractionClient,
  InteractionClientMessenger,
  InteractionEndpointStructure,
  InteractionServer,
  MessageType,
  StatusResponseError,
  ServerSubscription as SubscriptionHandler,
  ServerSubscriptionConfig as SubscriptionOptions,
  attributePathToId,
  canAttributePayloadBeChunked,
  chunkAttributePayload,
  clusterPathToId,
  commandPathToId,
  compressAttributeDataReportTags,
  decodeAttributeValueWithSchema,
  decodeListAttributeValueWithSchema,
  decodeUnknownAttributeValue,
  decodeUnknownEventValue,
  encodeAttributePayload,
  encodeEventPayload,
  eventPathToId,
  expandPathsInAttributeData,
  genericElementPathToId,
  normalizeAndDecodeAttributeData,
  normalizeAndDecodeEventData,
  normalizeAndDecodeReadAttributeReport,
  normalizeAndDecodeReadEventReport,
  normalizeAttributeData,
  normalizeEventData,
  sortAttributeDataByPath,
  structureReadAttributeDataToClusterObject,
  validateReadAttributesPath,
  validateReadEventPath
};
//# sourceMappingURL=interaction.js.map
