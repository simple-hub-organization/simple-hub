/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { StorageContext } from "#general";
import { ControllerStoreInterface } from "@matter/node";
/**
 * Non-volatile state management for a {@link ControllerNode}.
 *
 * The default implementation for matter.js uses synchronous APIs for storage.
 * However, this will change in the future, and other implementations may be
 * backed by asynchronous storage.  So the public API is asynchronous.
 */
export declare class LegacyControllerStore implements ControllerStoreInterface {
    #private;
    /**
     * Create a new store.
     */
    constructor(storage: StorageContext);
    erase(): Promise<void>;
    close(): Promise<void>;
    get sessionStorage(): StorageContext<any>;
    get caStorage(): StorageContext<any>;
    get nodesStorage(): StorageContext<any>;
    get fabricStorage(): StorageContext<any>;
    clientNodeStore(nodeId: string): StorageContext<any>;
}
//# sourceMappingURL=LegacyControllerStore.d.ts.map