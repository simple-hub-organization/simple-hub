/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ClusterServer as BaseClusterServer, ClusterDatasource } from "#protocol";
import { ClusterId, ClusterType } from "#types";
import { AttributeInitialValues, AttributeServers, ClusterServerHandlers, ClusterServerObj, CommandServers, EventServers, SupportedEventsList } from "./ClusterServerTypes.js";
/**
 * A collection of servers for a cluster's attributes, commands and events.
 */
export interface ClusterServer<T extends ClusterType = ClusterType> extends BaseClusterServer {
    /**
     * Cluster ID
     */
    id: ClusterId;
    /**
     * Cluster name
     */
    readonly name: string;
    /**
     * Cluster datasource
     */
    datasource?: ClusterDatasource;
    /**
     * Cluster attributes as named object that can be used to programmatically work with available attributes
     */
    readonly attributes: AttributeServers<T["attributes"]>;
    /**
     * Cluster commands as array
     */
    readonly commands: CommandServers<T["commands"]>;
    /**
     * Cluster events as named object
     */
    readonly events: EventServers<T["events"]>;
}
export declare function ClusterServer<const T extends ClusterType, const H extends ClusterServerHandlers<T>>(clusterDef: T, attributesInitialValues: AttributeInitialValues<T["attributes"]>, handlers: H, supportedEvents?: SupportedEventsList<T["events"]>, ignoreMissingElements?: boolean): ClusterServerObj<T>;
//# sourceMappingURL=ClusterServer.d.ts.map