"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var RefrigeratorAndTemperatureControlledCabinetMode_exports = {};
__export(RefrigeratorAndTemperatureControlledCabinetMode_exports, {
  RefrigeratorAndTemperatureControlledCabinetMode: () => RefrigeratorAndTemperatureControlledCabinetMode
});
module.exports = __toCommonJS(RefrigeratorAndTemperatureControlledCabinetMode_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const RefrigeratorAndTemperatureControlledCabinetMode = (0, import_elements.ClusterElement)(
  {
    name: "RefrigeratorAndTemperatureControlledCabinetMode",
    id: 82,
    type: "ModeBase",
    classification: "application",
    pics: "TCCM",
    details: "This cluster is derived from the Mode Base cluster, defining additional mode tags and namespaced enumerated values for refrigerator and temperature controlled cabinet devices.",
    xref: { document: "cluster", section: "8.7" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 2 }),
  (0, import_elements.AttributeElement)({ name: "SupportedModes", id: 0, conformance: "M", xref: { document: "cluster", section: "8.7.5" } }),
  (0, import_elements.AttributeElement)({ name: "CurrentMode", id: 1, conformance: "M", xref: { document: "cluster", section: "8.7.5" } }),
  (0, import_elements.AttributeElement)({ name: "StartUpMode", id: 2, conformance: "P", xref: { document: "cluster", section: "8.7.5" } }),
  (0, import_elements.AttributeElement)({ name: "OnMode", id: 3, conformance: "P", xref: { document: "cluster", section: "8.7.5" } }),
  (0, import_elements.DatatypeElement)({
    name: "ModeOptionStruct",
    type: "ModeOptionStruct",
    details: "The table below lists the changes relative to the Mode Base cluster for the fields of the ModeOptionStruct type. A blank field indicates no change.\nAt least one entry in the SupportedModes attribute shall include the Auto mode tag in the ModeTags field list.",
    xref: { document: "cluster", section: "8.7.4.1" }
  }),
  (0, import_elements.DatatypeElement)(
    { name: "ModeTag", type: "enum16" },
    (0, import_elements.FieldElement)({
      name: "RapidCool",
      id: 16384,
      details: "This mode reduces the temperature rapidly, typically above freezing grade.",
      xref: { document: "cluster", section: "8.7.6.1.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "RapidFreeze",
      id: 16385,
      details: "This mode reduces the temperature rapidly, below freezing grade.",
      xref: { document: "cluster", section: "8.7.6.1.2" }
    })
  )
);
import_MatterDefinition.MatterDefinition.children.push(RefrigeratorAndTemperatureControlledCabinetMode);
//# sourceMappingURL=RefrigeratorAndTemperatureControlledCabinetMode.js.map
