"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var OvenMode_exports = {};
__export(OvenMode_exports, {
  OvenMode: () => OvenMode
});
module.exports = __toCommonJS(OvenMode_exports);
var import_MatterDefinition = require("../MatterDefinition.js");
var import_elements = require("../../elements/index.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
const OvenMode = (0, import_elements.ClusterElement)(
  {
    name: "OvenMode",
    id: 73,
    type: "ModeBase",
    classification: "application",
    pics: "OTCCM",
    details: "This cluster is derived from the Mode Base cluster, defining additional mode tags and namespaced enumerated values for oven devices.",
    xref: { document: "cluster", section: "8.11" }
  },
  (0, import_elements.AttributeElement)({ name: "ClusterRevision", id: 65533, type: "ClusterRevision", default: 1 }),
  (0, import_elements.DatatypeElement)(
    { name: "ModeTag", type: "enum16" },
    (0, import_elements.FieldElement)({
      name: "Bake",
      id: 16384,
      details: "This mode sets the device into baking mode for baking food items.",
      xref: { document: "cluster", section: "8.11.4.1.1" }
    }),
    (0, import_elements.FieldElement)({
      name: "Convection",
      id: 16385,
      details: "This mode sets the device into convection mode which creates an airflow within the device during the cooking duration.",
      xref: { document: "cluster", section: "8.11.4.1.2" }
    }),
    (0, import_elements.FieldElement)({
      name: "Grill",
      id: 16386,
      details: "This mode sets the device into grill mode for grilling food items. This is the same as Broil for many regions.",
      xref: { document: "cluster", section: "8.11.4.1.3" }
    }),
    (0, import_elements.FieldElement)({
      name: "Roast",
      id: 16387,
      details: "This mode sets the device into roast mode for roasting food items.",
      xref: { document: "cluster", section: "8.11.4.1.4" }
    }),
    (0, import_elements.FieldElement)({
      name: "Clean",
      id: 16388,
      details: "This mode sets the device into cleaning mode to clean the internal components of the appliance.",
      xref: { document: "cluster", section: "8.11.4.1.5" }
    }),
    (0, import_elements.FieldElement)({ name: "ConvectionBake", id: 16389, xref: { document: "cluster", section: "8.11.4.1" } }),
    (0, import_elements.FieldElement)({ name: "ConvectionRoast", id: 16390, xref: { document: "cluster", section: "8.11.4.1" } }),
    (0, import_elements.FieldElement)({
      name: "Warming",
      id: 16391,
      details: "This mode sets the device into a warming mode which begins warming the cavity.",
      xref: { document: "cluster", section: "8.11.4.1.8" }
    }),
    (0, import_elements.FieldElement)({
      name: "Proofing",
      id: 16392,
      details: "This mode sets the device into proofing mode which creates an environment ready for proofing.",
      xref: { document: "cluster", section: "8.11.4.1.9" }
    }),
    (0, import_elements.FieldElement)({ name: "Steam", id: 16393, xref: { document: "cluster", section: "8.11.4.1" } })
  )
);
import_MatterDefinition.MatterDefinition.children.push(OvenMode);
//# sourceMappingURL=OvenMode.js.map
