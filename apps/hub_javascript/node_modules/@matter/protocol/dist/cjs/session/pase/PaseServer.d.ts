/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MatterFlowError, PbkdfParameters } from "#general";
import { SessionManager } from "#session/SessionManager.js";
import { MessageExchange } from "../../protocol/MessageExchange.js";
import { ProtocolHandler } from "../../protocol/ProtocolHandler.js";
import { PaseServerMessenger } from "./PaseMessenger.js";
export declare class MaximumPasePairingErrorsReachedError extends MatterFlowError {
}
export declare class PaseServer implements ProtocolHandler {
    private sessions;
    private readonly w0;
    private readonly L;
    private readonly pbkdfParameters?;
    private pairingTimer;
    private pairingErrors;
    static fromPin(sessions: SessionManager, setupPinCode: number, pbkdfParameters: PbkdfParameters): Promise<PaseServer>;
    static fromVerificationValue(sessions: SessionManager, verificationValue: Uint8Array, pbkdfParameters?: PbkdfParameters): PaseServer;
    constructor(sessions: SessionManager, w0: bigint, L: Uint8Array, pbkdfParameters?: PbkdfParameters | undefined);
    getId(): number;
    onNewExchange(exchange: MessageExchange): Promise<void>;
    private handlePairingRequest;
    cancelPairing(messenger: PaseServerMessenger, sendError?: boolean): Promise<void>;
    close(): Promise<void>;
}
//# sourceMappingURL=PaseServer.d.ts.map