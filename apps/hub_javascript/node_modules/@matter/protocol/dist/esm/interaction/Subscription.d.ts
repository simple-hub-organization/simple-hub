/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { type SecureSession } from "#session/SecureSession.js";
import { TlvAttributePath, TlvDataVersionFilter, TlvEventFilter, TlvEventPath, TypeFromSchema } from "#types";
export type SubscriptionId = number;
export interface SubscriptionCriteria {
    attributeRequests?: TypeFromSchema<typeof TlvAttributePath>[];
    dataVersionFilters?: TypeFromSchema<typeof TlvDataVersionFilter>[];
    eventRequests?: TypeFromSchema<typeof TlvEventPath>[];
    eventFilters?: TypeFromSchema<typeof TlvEventFilter>[];
    isFabricFiltered: boolean;
}
/**
 * A single active subscription.
 */
export declare class Subscription {
    #private;
    constructor(session: SecureSession, id: SubscriptionId, criteria: SubscriptionCriteria);
    get id(): number;
    get criteria(): SubscriptionCriteria;
    get isClosed(): boolean;
    get isCanceledByPeer(): boolean;
    get session(): SecureSession;
    /**
     * Update session state.  This probably is meaniningless except in a server context.
     */
    update(): Promise<void>;
    /**
     * This flag is set on closed sessions when the close was initiated by the peer.
     */
    protected set isCanceledByPeer(value: boolean);
    protected set isClosed(value: boolean);
    /**
     * Close the session.
     *
     * @param _graceful in a server context this means flush pending updates.  Not sure if applies to client
     * subscriptions
     */
    close(_graceful?: boolean): Promise<void>;
}
//# sourceMappingURL=Subscription.d.ts.map