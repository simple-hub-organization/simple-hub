/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Status } from "./Status.js";
import { ReadOnlyTransaction, act } from "./Tx.js";
const StatusEnum = Status;
const Transaction = {
  /**
   * Perform a transactional operation.  This is the only way to obtain a read/write transaction.
   *
   * The transaction will commit automatically if it is exclusive (write mode) after the actor returns.
   *
   * The transaction is destroyed when {@link act} returns.  You will receive an error if you access it after it is
   * destroyed.
   */
  act(via, actor) {
    return act(via, actor);
  },
  /**
   * A read-only transaction you may use without context.
   */
  ReadOnly: ReadOnlyTransaction,
  Status: StatusEnum,
  [Symbol.toStringTag]: "Transaction"
};
Transaction.act = act;
export {
  Transaction
};
//# sourceMappingURL=Transaction.js.map
